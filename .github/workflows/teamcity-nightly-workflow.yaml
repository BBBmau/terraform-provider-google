name: "TeamCity: Create empty branch off tip of main to aid nightly-testing"


# To ensure nightly tests/builds run on the same commit, we checkout and create a new branch from main for TeamCity to run builds on

on:
    workflow_dispatch:
      inputs:
        dayThreshold:
          default: '3'
    schedule:
        - cron: '0 4 * * *'

jobs:
  create-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@e69ef5462fd455e02edcaf4dd7708eda96b9eda0 # v7.0.0
        with:
          script: |
                  let dateToday = new Date().toJSON().slice(0, 10);

                  const mainRef = await github.rest.git.getRef({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    ref: "heads/main"
                  })
                  const branchName = "UTC-nightly-tests-" + dateToday;
                   const resp = await github.rest.git.createRef({
                     owner: context.repo.owner,
                     repo: context.repo.repo,
                     ref: "refs/heads/" + branchName,
                     sha: mainRef.data.object.sha
                   })
                   console.log("Created Branch: " + branchName)

  branch-sweeper:
    needs: create-branch
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/github-script@e69ef5462fd455e02edcaf4dd7708eda96b9eda0 # v7.0.0
        env:
          DAYS_THRESHOLD: ${{ inputs.dayThreshold }}
        with:
          script: |
            const { DAYS_THRESHOLD } = process.env
            console.log(`Removing nightly-test branches not made in the last ${DAYS_THRESHOLD} days`)
        
            function dateDifference(dateToday, branchDate){
                dateToday = new Date(dateToday)
                branchDate = new Date(branchDate)
                return (dateToday - branchDate) / 86_400_000 // calculates the difference in days based on milliseconds
            }
            
            async function branchSweeper(daysThreshold){
                let dateToday = new Date().toJSON().slice(0, 10);
                console.log("Today\'s date: ",dateToday);
                // grab the list of branches then iterate through the list checking for the difference in days
                const branchList = await github.rest.repos.listBranches({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    protected: false
                  })
                
                for (let i = 0; i < branchList.data.length; i++) {
                    const branchName = branchList.data.at(i).name
                    const branchDate = /\d{4,4}-\d{1,2}-\d{1,2}/g.exec(branchName)
                    if (branchDate == null) continue // skips if regex fails (is successful if matches with UTC-nightly-test branch format)
                    if (dateDifference(dateToday, branchDate) >= daysThreshold) { // only happens if difference is greater than or equal to 3, we only want to keep the last 3 night branches
                        const resp = await github.rest.git.deleteRef({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            ref: "heads/" + branchName,
                          })
                        if (resp.status == "422"){
                            console.error("Branch doesn\'t exist")
                        } else{
                          console.log("Deleted branch: " + branchName)
                        } 
                    }
                }
            }
          
            branchSweeper("${DAYS_THRESHOLD}")